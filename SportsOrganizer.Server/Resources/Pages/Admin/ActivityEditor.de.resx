<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActivityNumber" xml:space="preserve">
    <value>Aktivitätsnummer</value>
  </data>
  <data name="ActivityType" xml:space="preserve">
    <value>Aktivitätstyp</value>
  </data>
  <data name="Ascending" xml:space="preserve">
    <value>Aufsteigend</value>
  </data>
  <data name="BtnAdd" xml:space="preserve">
    <value>Aktivität hinzufügen</value>
  </data>
  <data name="BtnDelete" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="BtnDeleteAll" xml:space="preserve">
    <value>Alle Aktivitäten löschen</value>
  </data>
  <data name="BtnEdit" xml:space="preserve">
    <value>Bearbeiten</value>
  </data>
  <data name="BtnExport" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="BtnExportExcel" xml:space="preserve">
    <value>Nach Excel exportieren</value>
  </data>
  <data name="BtnExportPdf" xml:space="preserve">
    <value>Als PDF exportieren</value>
  </data>
  <data name="BtnExportXml" xml:space="preserve">
    <value>Nach XML exportieren</value>
  </data>
  <data name="BtnPrint" xml:space="preserve">
    <value>Drucken</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Stornieren</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Bestätigen</value>
  </data>
  <data name="ConfModalContent" xml:space="preserve">
    <value>Möchten Sie wirklich alle Aktivitäten löschen?</value>
  </data>
  <data name="ConfModalHeader" xml:space="preserve">
    <value>Bestätigen Sie das Löschen aller Aktivitäten</value>
  </data>
  <data name="DataExportAndPrintingTitle" xml:space="preserve">
    <value>Datenexport &amp; Drucken</value>
  </data>
  <data name="Descending" xml:space="preserve">
    <value>Absteigend</value>
  </data>
  <data name="Distance" xml:space="preserve">
    <value>Distanz</value>
  </data>
  <data name="EditData" xml:space="preserve">
    <value>Daten bearbeiten</value>
  </data>
  <data name="ep1" xml:space="preserve">
    <value>In diesem Abschnitt können Sie die im Datenraster angezeigten Daten exportieren und drucken. Sie können die Daten in verschiedene Dateiformate exportieren, darunter PDF, Excel und XML.</value>
  </data>
  <data name="ep2" xml:space="preserve">
    <value>Um die Daten zu exportieren, klicken Sie einfach auf die Schaltfläche „Exportieren“ und wählen Sie das gewünschte Dateiformat aus dem Dropdown-Menü aus. Das System generiert dann die Datei und fordert Sie auf, sie auf Ihrem Computer zu speichern.</value>
  </data>
  <data name="ep3" xml:space="preserve">
    <value>Neben dem Export können Sie die Daten auch direkt von der Seite ausdrucken. Klicken Sie einfach auf die Schaltfläche „Drucken“, um das Druckdialogfeld zu öffnen. Von hier aus können Sie Ihren Drucker auswählen und die Druckeinstellungen nach Bedarf anpassen.</value>
  </data>
  <data name="ep4" xml:space="preserve">
    <value>Das Exportieren und Drucken der Daten ist eine schnelle und einfache Möglichkeit, die Daten zu teilen und zu analysieren.</value>
  </data>
  <data name="ErrorToast" xml:space="preserve">
    <value>Es ist ein Fehler aufgetreten!</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Standort</value>
  </data>
  <data name="NumberOfPlayers" xml:space="preserve">
    <value>Anzahl der Spieler</value>
  </data>
  <data name="OrderType" xml:space="preserve">
    <value>Auftragsart</value>
  </data>
  <data name="p1" xml:space="preserve">
    <value>Willkommen auf der Aktivitätseditor-Seite!</value>
  </data>
  <data name="p2" xml:space="preserve">
    <value>Auf dieser Seite können Sie die Aktivitäten bearbeiten, die von den teilnehmenden Teams in Ihrem Sportereignis abgeschlossen werden müssen. Mit dem bereitgestellten Editor können Sie Aktivitäten ganz einfach nach Bedarf hinzufügen, bearbeiten oder löschen.</value>
  </data>
  <data name="p3" xml:space="preserve">
    <value>Das Hinzufügen einer neuen Aktivität ist ganz einfach – klicken Sie einfach auf die Schaltfläche „Aktivität hinzufügen“ und geben Sie die erforderlichen Informationen ein. Sie können den Aktivitätsnamen, die Beschreibung und alle anderen Details hinzufügen, die Sie hinzufügen möchten. Nach dem Hinzufügen wird die neue Aktivität im Editor angezeigt.</value>
  </data>
  <data name="p4" xml:space="preserve">
    <value>Wenn Sie Änderungen an einer vorhandenen Aktivität vornehmen müssen, klicken Sie einfach auf die Schaltfläche „Bearbeiten“ neben den Informationen zur Aktivität. Sie können den Aktivitätsnamen, die Beschreibung oder andere Details nach Bedarf ändern. Wenn Sie fertig sind, klicken Sie einfach auf die Schaltfläche „Änderungen speichern“.</value>
  </data>
  <data name="p5" xml:space="preserve">
    <value>Falls Sie eine Aktivität entfernen müssen, können Sie dies tun, indem Sie neben den Informationen zu der Aktivität auf die Schaltfläche „Löschen“ klicken. Eine Bestätigungsaufforderung wird angezeigt, und nach der Bestätigung wird die Aktivität dauerhaft aus dem Editor entfernt.</value>
  </data>
  <data name="p6" xml:space="preserve">
    <value>Mit der Aktivitätseditor-Seite haben Sie die vollständige Kontrolle über die Aktivitäten, die von den teilnehmenden Teams in Ihrem Event abgeschlossen werden müssen. Verwenden Sie es, um die Aktivitätsinformationen zu organisieren und zu pflegen und so ein reibungsloses und erfolgreiches Sportereignis zu gewährleisten.</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Aktivitätseditor</value>
  </data>
  <data name="Points" xml:space="preserve">
    <value>Punkte</value>
  </data>
  <data name="Props" xml:space="preserve">
    <value>Requisiten</value>
  </data>
  <data name="SuccessToast" xml:space="preserve">
    <value>Aktivitäten erfolgreich gelöscht!</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Zeit</value>
  </data>
  <data name="TotalItems" xml:space="preserve">
    <value>Gesamtanzahl</value>
  </data>
  <data name="UniqueIdentifier" xml:space="preserve">
    <value>Eindeutige Kennung</value>
  </data>
  <data name="WarningToast" xml:space="preserve">
    <value>Aktivitäten können aufgrund vorhandener Aktivitätsergebnisse oder Benutzer mit Aktivitätsberechtigungen nicht gelöscht werden!</value>
  </data>
</root>