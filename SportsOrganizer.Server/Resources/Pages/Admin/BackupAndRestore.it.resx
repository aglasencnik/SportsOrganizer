<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BtnBackup" xml:space="preserve">
    <value>Backup</value>
  </data>
  <data name="BtnRestore" xml:space="preserve">
    <value>Ristabilire</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annulla</value>
  </data>
  <data name="CheckFile" xml:space="preserve">
    <value>Controlla il file caricato!</value>
  </data>
  <data name="ChooseFile" xml:space="preserve">
    <value>Scegli un file...</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confermare</value>
  </data>
  <data name="ConfirmRestoration" xml:space="preserve">
    <value>Conferma ripristino</value>
  </data>
  <data name="ErrorToast" xml:space="preserve">
    <value>C'e 'stato un errore!</value>
  </data>
  <data name="p1" xml:space="preserve">
    <value>Benvenuto nella pagina Backup e Ripristino!</value>
  </data>
  <data name="p2" xml:space="preserve">
    <value>Questa pagina ti consente di creare file di backup dell'applicazione del tuo evento sportivo e di ripristinarli da istanze precedenti, se necessario. Con questo strumento, puoi garantire la sicurezza dei tuoi dati e recuperare facilmente da eventuali errori.</value>
  </data>
  <data name="p3" xml:space="preserve">
    <value>Per eseguire un backup della tua applicazione, fai semplicemente clic sul pulsante "Backup". Questo creerà un file di backup della tua applicazione e lo salverà nella posizione specificata. È quindi possibile utilizzare questo file di backup per ripristinare l'applicazione su un'istanza precedente, se necessario.</value>
  </data>
  <data name="p4" xml:space="preserve">
    <value>Per ripristinare l'applicazione da un'istanza precedente, fai clic sul pulsante "Ripristina" e seleziona il file di backup che desideri utilizzare. L'applicazione verrà quindi ripristinata allo stato in cui si trovava al momento della creazione del backup.</value>
  </data>
  <data name="p5" xml:space="preserve">
    <value>La pagina Backup &amp; Ripristino è uno strumento fondamentale per garantire la sicurezza dei tuoi dati e la continuità dell'applicazione del tuo evento sportivo. Assicurati di usarlo regolarmente per evitare qualsiasi potenziale perdita di dati.</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Ripristinare il backup</value>
  </data>
  <data name="RestorationQuestion" xml:space="preserve">
    <value>Vuoi davvero ripristinare l'applicazione?</value>
  </data>
  <data name="SuccessToast" xml:space="preserve">
    <value>Restauro riuscito!</value>
  </data>
</root>