<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActivityNumber" xml:space="preserve">
    <value>Aktivitätsnummer</value>
  </data>
  <data name="BtnAdd" xml:space="preserve">
    <value>Ergebnis hinzufügen</value>
  </data>
  <data name="BtnDelete" xml:space="preserve">
    <value>Löschen</value>
  </data>
  <data name="BtnDeleteAll" xml:space="preserve">
    <value>Alle Ergebnisse löschen</value>
  </data>
  <data name="BtnEdit" xml:space="preserve">
    <value>Bearbeiten</value>
  </data>
  <data name="BtnExport" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="BtnExportExcel" xml:space="preserve">
    <value>Nach Excel exportieren</value>
  </data>
  <data name="BtnExportPdf" xml:space="preserve">
    <value>Als PDF exportieren</value>
  </data>
  <data name="BtnExportXml" xml:space="preserve">
    <value>Nach XML exportieren</value>
  </data>
  <data name="BtnPrint" xml:space="preserve">
    <value>Drucken</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Stornieren</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Bestätigen</value>
  </data>
  <data name="ConfModalContent" xml:space="preserve">
    <value>Möchten Sie wirklich alle Ergebnisse löschen?</value>
  </data>
  <data name="ConfModalHeader" xml:space="preserve">
    <value>Löschen aller Ergebnisse bestätigen</value>
  </data>
  <data name="DataExportAndPrintingTitle" xml:space="preserve">
    <value>Datenexport &amp; Drucken</value>
  </data>
  <data name="EditData" xml:space="preserve">
    <value>Daten bearbeiten</value>
  </data>
  <data name="ep1" xml:space="preserve">
    <value>In diesem Abschnitt können Sie die im Datenraster angezeigten Daten exportieren und drucken. Sie können die Daten in verschiedene Dateiformate exportieren, darunter PDF, Excel und XML.</value>
  </data>
  <data name="ep2" xml:space="preserve">
    <value>Um die Daten zu exportieren, klicken Sie einfach auf die Schaltfläche „Exportieren“ und wählen Sie das gewünschte Dateiformat aus dem Dropdown-Menü aus. Das System generiert dann die Datei und fordert Sie auf, sie auf Ihrem Computer zu speichern.</value>
  </data>
  <data name="ep3" xml:space="preserve">
    <value>Neben dem Export können Sie die Daten auch direkt von der Seite ausdrucken. Klicken Sie einfach auf die Schaltfläche „Drucken“, um das Druckdialogfeld zu öffnen. Von hier aus können Sie Ihren Drucker auswählen und die Druckeinstellungen nach Bedarf anpassen.</value>
  </data>
  <data name="ep4" xml:space="preserve">
    <value>Das Exportieren und Drucken der Daten ist eine schnelle und einfache Möglichkeit, die Daten zu teilen und zu analysieren.</value>
  </data>
  <data name="ErrorToast" xml:space="preserve">
    <value>Es ist ein Fehler aufgetreten!</value>
  </data>
  <data name="p1" xml:space="preserve">
    <value>Willkommen auf der Ergebnis-Editor-Seite!</value>
  </data>
  <data name="p2" xml:space="preserve">
    <value>Auf dieser Seite können Sie die Ergebnisse der Aktivitäten bearbeiten, die von den konkurrierenden Teams in Ihrer Sportveranstaltung durchgeführt wurden. Mit dem bereitgestellten Editor können Sie Aktivitätsergebnisse ganz einfach nach Bedarf hinzufügen, bearbeiten oder löschen.</value>
  </data>
  <data name="p3" xml:space="preserve">
    <value>Das Datenraster zeigt alle Aktivitäten und die entsprechenden Ergebnisse, die von den Teams eingereicht wurden. Um ein neues Ergebnis hinzuzufügen, klicken Sie einfach auf die Schaltfläche „Ergebnis hinzufügen“ und geben Sie die erforderlichen Informationen ein. Nach dem Hinzufügen erscheint das neue Ergebnis im Datenraster.</value>
  </data>
  <data name="p4" xml:space="preserve">
    <value>Wenn Sie Änderungen an einem vorhandenen Ergebnis vornehmen müssen, klicken Sie einfach auf die Schaltfläche „Bearbeiten“ neben den Informationen des Ergebnisses. Sie können das Team, das Ergebnis oder andere Details nach Bedarf ändern. Wenn Sie fertig sind, klicken Sie einfach auf die Schaltfläche „Änderungen speichern“.</value>
  </data>
  <data name="p5" xml:space="preserve">
    <value>Falls Sie ein Ergebnis entfernen müssen, können Sie dies tun, indem Sie neben den Ergebnisinformationen auf die Schaltfläche „Löschen“ klicken. Es erscheint eine Bestätigungsaufforderung, und nach der Bestätigung wird das Ergebnis dauerhaft aus dem Datenraster entfernt.</value>
  </data>
  <data name="p6" xml:space="preserve">
    <value>Mit der Ergebnis-Editor-Seite haben Sie die vollständige Kontrolle über die Ergebnisse der Aktivitäten, die von den teilnehmenden Teams in Ihrem Event durchgeführt wurden. Verwenden Sie es, um die Ergebnisinformationen zu organisieren und zu pflegen und so eine faire und erfolgreiche Sportveranstaltung zu gewährleisten.</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Ergebniseditor</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value>Ergebnis</value>
  </data>
  <data name="TeamName" xml:space="preserve">
    <value>Teamname</value>
  </data>
  <data name="UniqueIdentifier" xml:space="preserve">
    <value>Eindeutige Kennung</value>
  </data>
</root>