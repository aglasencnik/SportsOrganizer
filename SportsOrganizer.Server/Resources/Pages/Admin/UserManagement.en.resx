<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Admin" xml:space="preserve">
    <value>Admin</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="AssignedActivities" xml:space="preserve">
    <value>Assigned Activities</value>
  </data>
  <data name="BtnAdd" xml:space="preserve">
    <value>Add User</value>
  </data>
  <data name="BtnDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="BtnDeleteAll" xml:space="preserve">
    <value>Delete all Users</value>
  </data>
  <data name="BtnEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="BtnExport" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="BtnExportExcel" xml:space="preserve">
    <value>Export to EXCEL</value>
  </data>
  <data name="BtnExportPdf" xml:space="preserve">
    <value>Export to PDF</value>
  </data>
  <data name="BtnExportXml" xml:space="preserve">
    <value>Export to XML</value>
  </data>
  <data name="BtnPrint" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="ConfModalContent" xml:space="preserve">
    <value>Do you really want to delete all users?</value>
  </data>
  <data name="ConfModalHeader" xml:space="preserve">
    <value>Confirm deletion of all users</value>
  </data>
  <data name="DataExportAndPrintingTitle" xml:space="preserve">
    <value>Data Export &amp; Printing</value>
  </data>
  <data name="EditData" xml:space="preserve">
    <value>Edit Data</value>
  </data>
  <data name="ep1" xml:space="preserve">
    <value>This section allows you to export and print the data displayed in the data grid. You can export the data into various file formats, including PDF, Excel, and XML.</value>
  </data>
  <data name="ep2" xml:space="preserve">
    <value>To export the data, simply click the 'Export' button and select the desired file format from the dropdown menu. The system will then generate the file and prompt you to save it to your computer.</value>
  </data>
  <data name="ep3" xml:space="preserve">
    <value>In addition to exporting, you can also print the data directly from the page. Simply click the 'Print' button to open the print dialog box. From here, you can select your printer and adjust the print settings as needed.</value>
  </data>
  <data name="ep4" xml:space="preserve">
    <value>Exporting and printing the data is a quick and easy way to share and analyze the data.</value>
  </data>
  <data name="ErrorToast" xml:space="preserve">
    <value>There has been an error!</value>
  </data>
  <data name="p1" xml:space="preserve">
    <value>Welcome to the User Management page!</value>
  </data>
  <data name="p2" xml:space="preserve">
    <value>This page allows you to manage the users of your sports event's application. With the provided editor, you can easily add, edit, or delete users as needed.</value>
  </data>
  <data name="p3" xml:space="preserve">
    <value>Adding a new user is simple - just click the 'Add User' button and fill out the necessary information. You can include the user name, password, and any other details you wish to add. Once added, the new user will appear in the editor.</value>
  </data>
  <data name="p4" xml:space="preserve">
    <value>From here, you can also assign roles to the users, such as 'User' or 'Admin'. Users with the 'Admin' role have access to all features of the application, while users with the 'User' role have limited access. You can also choose which activities each user can access, giving you complete control over their permissions.</value>
  </data>
  <data name="p5" xml:space="preserve">
    <value>If you need to make changes to an existing user, simply click the 'Edit' button next to the user's information. You can modify the user name, password, role, or any other details as needed. Once you're finished, just click the 'Save Changes' button.</value>
  </data>
  <data name="p6" xml:space="preserve">
    <value>In case you need to remove a user, you can do so by clicking the 'Delete' button next to the user's information. A confirmation prompt will appear, and once confirmed, the user will be permanently removed from the editor.</value>
  </data>
  <data name="p7" xml:space="preserve">
    <value>With the User Management page, you have complete control over the users of your sports event's application. Use it to organize and maintain the user information, ensuring a secure and successful sports event.</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>User management</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="SuccessToast" xml:space="preserve">
    <value>Users deleted successfully!</value>
  </data>
  <data name="UniqueIdentifier" xml:space="preserve">
    <value>Unique Identifier</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="UserType" xml:space="preserve">
    <value>User Type</value>
  </data>
</root>