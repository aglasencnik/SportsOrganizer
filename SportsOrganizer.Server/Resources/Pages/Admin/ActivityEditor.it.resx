<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActivityNumber" xml:space="preserve">
    <value>Numero attività</value>
  </data>
  <data name="ActivityType" xml:space="preserve">
    <value>Tipo di attività</value>
  </data>
  <data name="Ascending" xml:space="preserve">
    <value>Ascendente</value>
  </data>
  <data name="BtnAdd" xml:space="preserve">
    <value>Aggiungi attività</value>
  </data>
  <data name="BtnDelete" xml:space="preserve">
    <value>Eliminare</value>
  </data>
  <data name="BtnDeleteAll" xml:space="preserve">
    <value>Elimina tutte le attività</value>
  </data>
  <data name="BtnEdit" xml:space="preserve">
    <value>Modificare</value>
  </data>
  <data name="BtnExport" xml:space="preserve">
    <value>Esportare</value>
  </data>
  <data name="BtnExportExcel" xml:space="preserve">
    <value>Esportare in Excel</value>
  </data>
  <data name="BtnExportPdf" xml:space="preserve">
    <value>Esporta in PDF</value>
  </data>
  <data name="BtnExportXml" xml:space="preserve">
    <value>Esporta in XML</value>
  </data>
  <data name="BtnPrint" xml:space="preserve">
    <value>Stampa</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annulla</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confermare</value>
  </data>
  <data name="ConfModalContent" xml:space="preserve">
    <value>Vuoi davvero eliminare tutte le attività?</value>
  </data>
  <data name="ConfModalHeader" xml:space="preserve">
    <value>Conferma l'eliminazione di tutte le attività</value>
  </data>
  <data name="DataExportAndPrintingTitle" xml:space="preserve">
    <value>Esportazione e stampa dei dati</value>
  </data>
  <data name="Descending" xml:space="preserve">
    <value>Discendente</value>
  </data>
  <data name="Distance" xml:space="preserve">
    <value>Distanza</value>
  </data>
  <data name="EditData" xml:space="preserve">
    <value>Modifica dati</value>
  </data>
  <data name="ep1" xml:space="preserve">
    <value>Questa sezione consente di esportare e stampare i dati visualizzati nella griglia dati. Puoi esportare i dati in vari formati di file, inclusi PDF, Excel e XML.</value>
  </data>
  <data name="ep2" xml:space="preserve">
    <value>Per esportare i dati, fai semplicemente clic sul pulsante "Esporta" e seleziona il formato di file desiderato dal menu a discesa. Il sistema genererà quindi il file e ti chiederà di salvarlo sul tuo computer.</value>
  </data>
  <data name="ep3" xml:space="preserve">
    <value>Oltre all'esportazione, puoi anche stampare i dati direttamente dalla pagina. Basta fare clic sul pulsante "Stampa" per aprire la finestra di dialogo di stampa. Da qui è possibile selezionare la stampante e regolare le impostazioni di stampa secondo necessità.</value>
  </data>
  <data name="ep4" xml:space="preserve">
    <value>L'esportazione e la stampa dei dati è un modo rapido e semplice per condividere e analizzare i dati.</value>
  </data>
  <data name="ErrorToast" xml:space="preserve">
    <value>C'e 'stato un errore!</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Posizione</value>
  </data>
  <data name="NumberOfPlayers" xml:space="preserve">
    <value>Numero di giocatori</value>
  </data>
  <data name="OrderType" xml:space="preserve">
    <value>Tipo di ordine</value>
  </data>
  <data name="p1" xml:space="preserve">
    <value>Benvenuto nella pagina dell'editor di attività!</value>
  </data>
  <data name="p2" xml:space="preserve">
    <value>Questa pagina ti consente di modificare le attività che devono essere completate dalle squadre partecipanti al tuo evento sportivo. Con l'editor fornito, puoi facilmente aggiungere, modificare o eliminare le attività secondo necessità.</value>
  </data>
  <data name="p3" xml:space="preserve">
    <value>Aggiungere una nuova attività è semplice: fai clic sul pulsante "Aggiungi attività" e inserisci le informazioni necessarie. Puoi includere il nome dell'attività, la descrizione e qualsiasi altro dettaglio che desideri aggiungere. Una volta aggiunta, la nuova attività apparirà nell'editor.</value>
  </data>
  <data name="p4" xml:space="preserve">
    <value>Se devi apportare modifiche a un'attività esistente, fai semplicemente clic sul pulsante "Modifica" accanto alle informazioni sull'attività. È possibile modificare il nome dell'attività, la descrizione o qualsiasi altro dettaglio secondo necessità. Al termine, fai clic sul pulsante "Salva modifiche".</value>
  </data>
  <data name="p5" xml:space="preserve">
    <value>Nel caso in cui sia necessario rimuovere un'attività, è possibile farlo facendo clic sul pulsante "Elimina" accanto alle informazioni dell'attività. Apparirà una richiesta di conferma e, una volta confermata, l'attività verrà definitivamente rimossa dall'editor.</value>
  </data>
  <data name="p6" xml:space="preserve">
    <value>Con la pagina Activity Editor hai il controllo completo sulle attività che devono essere completate dalle squadre partecipanti al tuo evento. Usalo per organizzare e mantenere le informazioni sull'attività, garantendo un evento sportivo regolare e di successo.</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Redattore di attività</value>
  </data>
  <data name="Points" xml:space="preserve">
    <value>Punti</value>
  </data>
  <data name="Props" xml:space="preserve">
    <value>Puntelli</value>
  </data>
  <data name="SuccessToast" xml:space="preserve">
    <value>Attività eliminate con successo!</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Tempo</value>
  </data>
  <data name="TotalItems" xml:space="preserve">
    <value>voci totali</value>
  </data>
  <data name="UniqueIdentifier" xml:space="preserve">
    <value>Identificativo unico</value>
  </data>
  <data name="WarningToast" xml:space="preserve">
    <value>Impossibile eliminare le attività a causa dei risultati delle attività esistenti o degli utenti con autorizzazioni per le attività!</value>
  </data>
</root>