<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BtnBackup" xml:space="preserve">
    <value>Respaldo</value>
  </data>
  <data name="BtnRestore" xml:space="preserve">
    <value>Restaurar</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancelar</value>
  </data>
  <data name="CheckFile" xml:space="preserve">
    <value>¡Comprueba el archivo subido!</value>
  </data>
  <data name="ChooseFile" xml:space="preserve">
    <value>Escoge un archivo...</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirmar</value>
  </data>
  <data name="ConfirmRestoration" xml:space="preserve">
    <value>Confirmar restauración</value>
  </data>
  <data name="ErrorToast" xml:space="preserve">
    <value>¡Ha habido un error!</value>
  </data>
  <data name="p1" xml:space="preserve">
    <value>¡Bienvenido a la página Copia de seguridad y restauración!</value>
  </data>
  <data name="p2" xml:space="preserve">
    <value>Esta página le permite hacer copias de seguridad de archivos de la aplicación de su evento deportivo y restaurar desde instancias anteriores si es necesario. Con esta herramienta, puede garantizar la seguridad de sus datos y recuperarse fácilmente de cualquier error.</value>
  </data>
  <data name="p3" xml:space="preserve">
    <value>Para hacer una copia de seguridad de su aplicación, simplemente haga clic en el botón 'Copia de seguridad'. Esto creará un archivo de respaldo de su aplicación y lo guardará en la ubicación especificada. Luego puede usar este archivo de copia de seguridad para restaurar su aplicación a una instancia anterior si es necesario.</value>
  </data>
  <data name="p4" xml:space="preserve">
    <value>Para restaurar su aplicación desde una instancia anterior, haga clic en el botón 'Restaurar' y seleccione el archivo de respaldo que desea usar. Luego, su aplicación se restaurará al estado en el que se encontraba en el momento en que se creó la copia de seguridad.</value>
  </data>
  <data name="p5" xml:space="preserve">
    <value>La página Backup &amp; Restore es una herramienta vital para garantizar la seguridad de sus datos y la continuidad de la aplicación de su evento deportivo. Asegúrese de usarlo regularmente para evitar cualquier posible pérdida de datos.</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Copia de seguridad de restauracion</value>
  </data>
  <data name="RestorationQuestion" xml:space="preserve">
    <value>¿Realmente desea restaurar la aplicación?</value>
  </data>
  <data name="SuccessToast" xml:space="preserve">
    <value>Restauración exitosa!</value>
  </data>
</root>