<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActivityNumber" xml:space="preserve">
    <value>Numéro d'activité</value>
  </data>
  <data name="ActivityType" xml:space="preserve">
    <value>Type d'activité</value>
  </data>
  <data name="Ascending" xml:space="preserve">
    <value>Ascendant</value>
  </data>
  <data name="BtnAdd" xml:space="preserve">
    <value>Ajouter une activité</value>
  </data>
  <data name="BtnDelete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="BtnDeleteAll" xml:space="preserve">
    <value>Supprimer toutes les activités</value>
  </data>
  <data name="BtnEdit" xml:space="preserve">
    <value>Modifier</value>
  </data>
  <data name="BtnExport" xml:space="preserve">
    <value>Exporter</value>
  </data>
  <data name="BtnExportExcel" xml:space="preserve">
    <value>Exporter vers EXCEL</value>
  </data>
  <data name="BtnExportPdf" xml:space="preserve">
    <value>Exporter au format PDF</value>
  </data>
  <data name="BtnExportXml" xml:space="preserve">
    <value>Exporter vers XML</value>
  </data>
  <data name="BtnPrint" xml:space="preserve">
    <value>Imprimer</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirmer</value>
  </data>
  <data name="ConfModalContent" xml:space="preserve">
    <value>Voulez-vous vraiment supprimer toutes les activités ?</value>
  </data>
  <data name="ConfModalHeader" xml:space="preserve">
    <value>Confirmer la suppression de toutes les activités</value>
  </data>
  <data name="DataExportAndPrintingTitle" xml:space="preserve">
    <value>Exportation et impression de données</value>
  </data>
  <data name="Descending" xml:space="preserve">
    <value>Descendant</value>
  </data>
  <data name="Distance" xml:space="preserve">
    <value>Distance</value>
  </data>
  <data name="EditData" xml:space="preserve">
    <value>Modifier les données</value>
  </data>
  <data name="ep1" xml:space="preserve">
    <value>Cette section vous permet d'exporter et d'imprimer les données affichées dans la grille de données. Vous pouvez exporter les données dans différents formats de fichiers, notamment PDF, Excel et XML.</value>
  </data>
  <data name="ep2" xml:space="preserve">
    <value>Pour exporter les données, cliquez simplement sur le bouton "Exporter" et sélectionnez le format de fichier souhaité dans le menu déroulant. Le système générera alors le fichier et vous invitera à l'enregistrer sur votre ordinateur.</value>
  </data>
  <data name="ep3" xml:space="preserve">
    <value>En plus de l'exportation, vous pouvez également imprimer les données directement à partir de la page. Cliquez simplement sur le bouton "Imprimer" pour ouvrir la boîte de dialogue d'impression. À partir de là, vous pouvez sélectionner votre imprimante et ajuster les paramètres d'impression selon vos besoins.</value>
  </data>
  <data name="ep4" xml:space="preserve">
    <value>L'exportation et l'impression des données constituent un moyen simple et rapide de partager et d'analyser les données.</value>
  </data>
  <data name="ErrorToast" xml:space="preserve">
    <value>Il y a eu une erreur!</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Emplacement</value>
  </data>
  <data name="NumberOfPlayers" xml:space="preserve">
    <value>Nombre de joueurs</value>
  </data>
  <data name="OrderType" xml:space="preserve">
    <value>Type de commande</value>
  </data>
  <data name="p1" xml:space="preserve">
    <value>Bienvenue sur la page de l'éditeur d'activité !</value>
  </data>
  <data name="p2" xml:space="preserve">
    <value>Cette page vous permet de modifier les activités qui doivent être réalisées par les équipes en compétition dans votre événement sportif. Avec l'éditeur fourni, vous pouvez facilement ajouter, modifier ou supprimer des activités selon vos besoins.</value>
  </data>
  <data name="p3" xml:space="preserve">
    <value>L'ajout d'une nouvelle activité est simple - cliquez simplement sur le bouton "Ajouter une activité" et remplissez les informations nécessaires. Vous pouvez inclure le nom de l'activité, sa description et tout autre détail que vous souhaitez ajouter. Une fois ajoutée, la nouvelle activité apparaîtra dans l'éditeur.</value>
  </data>
  <data name="p4" xml:space="preserve">
    <value>Si vous devez apporter des modifications à une activité existante, cliquez simplement sur le bouton "Modifier" à côté des informations de l'activité. Vous pouvez modifier le nom de l'activité, la description ou tout autre détail selon vos besoins. Une fois que vous avez terminé, cliquez simplement sur le bouton "Enregistrer les modifications".</value>
  </data>
  <data name="p5" xml:space="preserve">
    <value>Si vous devez supprimer une activité, vous pouvez le faire en cliquant sur le bouton "Supprimer" à côté des informations de l'activité. Une invite de confirmation apparaîtra, et une fois confirmée, l'activité sera définitivement supprimée de l'éditeur.</value>
  </data>
  <data name="p6" xml:space="preserve">
    <value>Avec la page Éditeur d'activité, vous avez un contrôle total sur les activités qui doivent être complétées par les équipes en compétition dans votre événement. Utilisez-le pour organiser et maintenir les informations sur l'activité, assurant ainsi un événement sportif fluide et réussi.</value>
  </data>
  <data name="PageTitle" xml:space="preserve">
    <value>Éditeur d'activité</value>
  </data>
  <data name="Points" xml:space="preserve">
    <value>Points</value>
  </data>
  <data name="Props" xml:space="preserve">
    <value>Accessoires</value>
  </data>
  <data name="SuccessToast" xml:space="preserve">
    <value>Activités supprimées avec succès !</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Temps</value>
  </data>
  <data name="TotalItems" xml:space="preserve">
    <value>articles au total</value>
  </data>
  <data name="UniqueIdentifier" xml:space="preserve">
    <value>Identifiant unique</value>
  </data>
  <data name="WarningToast" xml:space="preserve">
    <value>Impossible de supprimer des activités en raison de résultats d'activité existants ou d'utilisateurs disposant d'autorisations d'activité !</value>
  </data>
</root>