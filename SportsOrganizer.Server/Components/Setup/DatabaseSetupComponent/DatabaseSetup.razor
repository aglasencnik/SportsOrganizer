@inherits DatabaseSetupBase

@if (ShowForm)
{
    <div class="database-form">
        <Label>@Localizer["SelectProviderInstructions"]</Label>
        <RadioGroup TValue="DatabaseProviderType"
                Name="DatabaseProviders"
                CheckedValue="@SelectedDatabaseProvider"
                CheckedValueChanged="@OnCheckedDatabaseProviderChanged"
                Orientation="Orientation.Vertical">
            <Radio Value="@(DatabaseProviderType.SqlServer)">SQL Server</Radio>
            <Radio Value="@(DatabaseProviderType.MySQL)">MySQL</Radio>
            <Radio Value="@(DatabaseProviderType.PostgreSQL)">PostgreSQL</Radio>
        </RadioGroup>
        <hr />
        <Validation Validator="ValidationRule.IsNotEmpty">
            <Label>@Localizer["Server"]</Label>
            <TextEdit @bind-Text="Server">
                <Feedback>
                    <ValidationError>@Localizer["ServerError"]</ValidationError>
                </Feedback>
            </TextEdit>
        </Validation>
        @if (SelectedDatabaseProvider == DatabaseProviderType.MySQL || SelectedDatabaseProvider == DatabaseProviderType.PostgreSQL)
        {
            <Label Margin="Margin.Is3.FromTop">@Localizer["Port"]</Label>
            <NumericPicker Min="1" @bind-Value="Port" />
        }
        <Validation Validator="ValidationRule.IsNotEmpty">
            <Label Margin="Margin.Is3.FromTop">@Localizer["Database"]</Label>
            <TextEdit @bind-Text="Database">
                <Feedback>
                    <ValidationError>@Localizer["DatabaseError"]</ValidationError>
                </Feedback>
            </TextEdit>
        </Validation>
        <Validation Validator="ValidationRule.IsNotEmpty">
            <Label Margin="Margin.Is3.FromTop">@Localizer["Username"]</Label>
            <TextEdit @bind-Text="Username">
                <Feedback>
                    <ValidationError>@Localizer["UsernameError"]</ValidationError>
                </Feedback>
            </TextEdit>
        </Validation>
        <Validation Validator="ValidationRule.IsNotEmpty">
            <Label Margin="Margin.Is3.FromTop">@Localizer["Password"]</Label>
            <TextEdit Role="TextRole.Password" @bind-Text="Password">
                <Feedback>
                    <ValidationError>@Localizer["PasswordError"]</ValidationError>
                </Feedback>
            </TextEdit>
        </Validation>
        <hr />
        <div class="buttons-div d-flex justify-content-center">
            <Button Color="Color.Primary" Clicked="OnButtonContinueClick">@Localizer["BtnContinue"]</Button>
        </div>
    </div>
}
else
{
    <SpinKit Type="SpinKitType.Chase" Centered="true" Size="100px" />
}
